{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport axios from \"axios\";\nexport default class AppStore {\n  constructor() {\n    //apiPath = 'https://jsonplaceholder.typicode.com/';\n    this.apiPath = 'https://localhost:7071/api';\n    this.algorithms = [];\n    this.functions = [];\n    this.file = \"\";\n    this.przerwanoSingleTask = false;\n    this.przerwanoMultiTask = false;\n    // TO DO break functionality\n    this.setAlgorithms = data => {\n      this.algorithms = data;\n    };\n    this.setFunctions = data => {\n      this.functions = data;\n    };\n    this.handleFileChange = event => {\n      console.log(\"> Zmieniam plik\");\n      if (event.target.files && event.target.files.length > 0) {\n        const selectedFile = event.target.files[0];\n        this.file = selectedFile;\n      }\n      console.log(this.file);\n    };\n    this.handleUpload = async event => {\n      if (this.file) {\n        console.log(\"> Uploaduje plik\");\n        const formData = new FormData();\n        formData.append('file', this.file);\n        try {\n          const response = await axios.post(this.apiPath + '/Upload/Add', formData);\n          console.log('Plik przesłany pomyślnie', response);\n          alert(\"Plik wysłany\");\n        } catch (error) {\n          console.error('Błąd podczas przesyłania pliku', error);\n        }\n      } else {\n        console.log(\"Brak pliku do przesłania\");\n      }\n      this.file = \"\";\n      console.log(\"Czyszcze input\");\n      document.getElementById(\"fileUpload\").value = \"\";\n    };\n    // PARAMETERS changing\n    this.handleFuncDimChange = id => {};\n    // TASKs\n    this.runSinlgeTask = async () => {\n      console.log(\"> Uruchamiam SINGLE TASK\");\n      let algoID = document.querySelector('input[name=\"algo-one\"]:checked');\n      if (algoID) {\n        console.log(\"Wybrany algorytm: \", algoID.value);\n      } else {\n        console.log(\"Nie wybrano algorytmu\");\n      }\n      let funcIDs = [];\n      let checkboxes = document.querySelectorAll('input[name=\"func-many\"]:checked');\n      if (checkboxes.length > 0) {\n        checkboxes.forEach(checkbox => {\n          funcIDs.push(checkbox.value);\n        });\n        console.log(\"Wybrane funkcje: \", funcIDs);\n      } else {\n        console.log(\"Nie wybrano funkcjów\");\n      }\n      console.log(\"Czyszcze inputy\");\n      if (algoID) {\n        algoID.checked = false;\n      }\n      if (checkboxes.length > 0) {\n        checkboxes.forEach(checkbox => {\n          checkbox.checked = false;\n        });\n      }\n    };\n    this.algoIDs = [];\n    this.handleAlgoIDsChange = () => {\n      this.algoIDs = [];\n      console.log(\"> algoIDs change\");\n      let checkboxes = document.querySelectorAll('input[name=\"algo-many\"]:checked');\n      if (checkboxes.length > 0) {\n        checkboxes.forEach(checkbox => {\n          this.algoIDs.push(checkbox.value);\n        });\n      }\n    };\n    this.funcID = null;\n    this.handleFuncIDChange = () => {\n      console.log(\"> funcID change\");\n      document.querySelector('input[name=\"func-one\"]:checked') ? this.funcID = document.querySelector('input[name=\"func-one\"]:checked').value : this.funcID = null;\n    };\n    this.runMultiTask = async () => {\n      console.log(\"> Uruchamiam MULTI TASK\");\n      if (this.algoIDs.length > 0) {\n        console.log(\"Wybrane algosy: \");\n        this.algoIDs.forEach(id => {\n          console.log(id);\n        });\n      } else {\n        console.log(\"Nie wybrano algorytmów\");\n      }\n      if (this.funcID) {\n        console.log(\"Wybrana funkcja: \", this.funcID);\n      } else {\n        console.log(\"Nie wybrano funkcji\");\n      }\n\n      // let algoIDs = []\n      // let checkboxes = document.querySelectorAll('input[name=\"algo-many\"]:checked')\n      // if (checkboxes.length > 0) {\n      //     checkboxes.forEach((checkbox) => {\n      //         algoIDs.push(checkbox.value)\n      //     })\n      //     console.log(\"Wybrane algosy: \", algoIDs)\n      // }\n      // else {\n      //     console.log(\"Nie wybrano algorytmów\")\n      // }\n\n      // let funcID = document.querySelector('input[name=\"func-one\"]:checked')\n\n      // if (funcID) {\n      //     console.log(\"Wybrana funckja: \", funcID.value)\n      // }\n      // else {\n      //     console.log(\"Nie wybrano funkcji\")\n      // }\n\n      console.log(\"Czyszcze inputy\");\n      let checkboxes = document.querySelectorAll('input[name=\"algo-many\"]:checked');\n      if (checkboxes.length > 0) {\n        checkboxes.forEach(checkbox => {\n          checkbox.checked = false;\n        });\n        this.algoIDs = [];\n      }\n      if (this.funcID) {\n        document.querySelector('input[name=\"func-one\"]:checked').checked = false;\n        this.funcID = null;\n      }\n    };\n    makeAutoObservable(this);\n  }\n}","map":{"version":3,"names":["makeAutoObservable","axios","AppStore","constructor","apiPath","algorithms","functions","file","przerwanoSingleTask","przerwanoMultiTask","setAlgorithms","data","setFunctions","handleFileChange","event","console","log","target","files","length","selectedFile","handleUpload","formData","FormData","append","response","post","alert","error","document","getElementById","value","handleFuncDimChange","id","runSinlgeTask","algoID","querySelector","funcIDs","checkboxes","querySelectorAll","forEach","checkbox","push","checked","algoIDs","handleAlgoIDsChange","funcID","handleFuncIDChange","runMultiTask"],"sources":["C:/Users/gesie/astudia_repos/heuristic-algo-app/HeuristicAlgoApp-Frontend/system-frontend/src/AppStore.js"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\nimport axios from \"axios\";\r\n\r\nexport default class AppStore {\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    //apiPath = 'https://jsonplaceholder.typicode.com/';\r\n    apiPath = 'https://localhost:7071/api';\r\n\r\n    algorithms = [];\r\n    functions = [];\r\n    file = \"\";\r\n\r\n    przerwanoSingleTask = false;\r\n    przerwanoMultiTask = false;\r\n\r\n    // TO DO break functionality\r\n\r\n    setAlgorithms = (data) => {\r\n        this.algorithms = data;\r\n    }\r\n\r\n    setFunctions = (data) => {\r\n        this.functions = data;\r\n    }\r\n\r\n    handleFileChange = (event) => {\r\n\r\n        console.log(\"> Zmieniam plik\");\r\n\r\n        if (event.target.files && event.target.files.length > 0) {\r\n            const selectedFile = event.target.files[0];\r\n            this.file = selectedFile;\r\n        }\r\n\r\n        console.log(this.file);\r\n    };\r\n\r\n    handleUpload = async (event) => {\r\n\r\n        if (this.file) {\r\n            console.log(\"> Uploaduje plik\");\r\n            const formData = new FormData();\r\n            formData.append('file', this.file);\r\n            try {\r\n                const response = await axios.post(this.apiPath + '/Upload/Add', formData);\r\n                console.log('Plik przesłany pomyślnie', response);\r\n                alert(\"Plik wysłany\")\r\n            } catch (error) {\r\n                console.error('Błąd podczas przesyłania pliku', error);\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"Brak pliku do przesłania\")\r\n        }\r\n\r\n        this.file = \"\"\r\n        console.log(\"Czyszcze input\")\r\n        document.getElementById(\"fileUpload\").value = \"\"\r\n    }\r\n\r\n    // PARAMETERS changing\r\n\r\n    handleFuncDimChange = (id) => {\r\n        \r\n    }\r\n\r\n    // TASKs\r\n\r\n    runSinlgeTask = async () => {\r\n\r\n        console.log(\"> Uruchamiam SINGLE TASK\")\r\n\r\n        let algoID = document.querySelector('input[name=\"algo-one\"]:checked')\r\n        if (algoID) {\r\n            console.log(\"Wybrany algorytm: \", algoID.value)\r\n        }\r\n        else {\r\n            console.log(\"Nie wybrano algorytmu\")\r\n        }\r\n\r\n        let funcIDs = []\r\n        let checkboxes = document.querySelectorAll('input[name=\"func-many\"]:checked')\r\n        if (checkboxes.length > 0) {\r\n            checkboxes.forEach((checkbox) => {\r\n                funcIDs.push(checkbox.value)\r\n            })\r\n            console.log(\"Wybrane funkcje: \", funcIDs)\r\n        }\r\n        else {\r\n            console.log(\"Nie wybrano funkcjów\")\r\n        }\r\n\r\n        console.log(\"Czyszcze inputy\")\r\n        if (algoID) { algoID.checked = false }\r\n        if (checkboxes.length > 0) {\r\n            checkboxes.forEach((checkbox) => {\r\n                checkbox.checked = false\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    algoIDs = []\r\n\r\n    handleAlgoIDsChange = () => {\r\n        this.algoIDs = []\r\n        console.log(\"> algoIDs change\")\r\n        let checkboxes = document.querySelectorAll('input[name=\"algo-many\"]:checked')\r\n        if (checkboxes.length > 0) {\r\n            checkboxes.forEach((checkbox) => {\r\n                this.algoIDs.push(checkbox.value)\r\n            })\r\n        }\r\n    }\r\n    \r\n    funcID = null\r\n    \r\n    handleFuncIDChange = () => {\r\n        console.log(\"> funcID change\")\r\n        document.querySelector('input[name=\"func-one\"]:checked')\r\n            ?\r\n            this.funcID = document.querySelector('input[name=\"func-one\"]:checked').value\r\n            :\r\n            this.funcID = null\r\n    }\r\n\r\n    runMultiTask = async () => {\r\n\r\n        console.log(\"> Uruchamiam MULTI TASK\")\r\n\r\n        if (this.algoIDs.length > 0) {\r\n            console.log(\"Wybrane algosy: \")\r\n            this.algoIDs.forEach((id) => {\r\n                console.log(id)\r\n            })\r\n        }\r\n        else {\r\n            console.log(\"Nie wybrano algorytmów\")\r\n        }\r\n\r\n        if (this.funcID) {\r\n            console.log(\"Wybrana funkcja: \", this.funcID)\r\n        }\r\n        else {\r\n            console.log(\"Nie wybrano funkcji\")\r\n        }\r\n\r\n        // let algoIDs = []\r\n        // let checkboxes = document.querySelectorAll('input[name=\"algo-many\"]:checked')\r\n        // if (checkboxes.length > 0) {\r\n        //     checkboxes.forEach((checkbox) => {\r\n        //         algoIDs.push(checkbox.value)\r\n        //     })\r\n        //     console.log(\"Wybrane algosy: \", algoIDs)\r\n        // }\r\n        // else {\r\n        //     console.log(\"Nie wybrano algorytmów\")\r\n        // }\r\n\r\n        // let funcID = document.querySelector('input[name=\"func-one\"]:checked')\r\n\r\n        // if (funcID) {\r\n        //     console.log(\"Wybrana funckja: \", funcID.value)\r\n        // }\r\n        // else {\r\n        //     console.log(\"Nie wybrano funkcji\")\r\n        // }\r\n\r\n\r\n\r\n\r\n        console.log(\"Czyszcze inputy\")\r\n        let checkboxes = document.querySelectorAll('input[name=\"algo-many\"]:checked')\r\n        if (checkboxes.length > 0) {\r\n            checkboxes.forEach((checkbox) => {\r\n                checkbox.checked = false\r\n            })\r\n            this.algoIDs = []\r\n        }\r\n        if (this.funcID) {\r\n            document.querySelector('input[name=\"func-one\"]:checked').checked = false\r\n            this.funcID = null\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}