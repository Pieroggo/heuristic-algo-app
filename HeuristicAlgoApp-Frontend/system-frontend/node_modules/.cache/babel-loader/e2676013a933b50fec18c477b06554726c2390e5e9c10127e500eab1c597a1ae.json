{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport axios from \"axios\";\nexport default class AppStore {\n  constructor() {\n    //apiPath = 'https://jsonplaceholder.typicode.com/';\n    this.apiPath = 'https://localhost:7071/api';\n    this.algorithms = [];\n    this.functions = [];\n    this.file = \"\";\n    this.setAlgorithms = data => {\n      this.algorithms = data;\n    };\n    this.setFunctions = data => {\n      this.functions = data;\n    };\n    this.handleFileChange = event => {\n      console.log(\"> Zmieniam plik\");\n      if (event.target.files && event.target.files.length > 0) {\n        const selectedFile = event.target.files[0];\n        this.file = selectedFile;\n      }\n      console.log(this.file);\n    };\n    this.handleUpload = async event => {\n      if (this.file) {\n        console.log(\"> Uploaduje plik\");\n        const formData = new FormData();\n        formData.append('file', this.file);\n        try {\n          const response = await axios.post(this.apiPath + '/Upload/Add', formData);\n          console.log('Plik przesłany pomyślnie', response);\n          alert(\"Plik wysłany\");\n        } catch (error) {\n          console.error('Błąd podczas przesyłania pliku', error);\n        }\n      } else {\n        console.log(\"Brak pliku do przesłania\");\n      }\n      this.file = \"\";\n      console.log(\"Czyszcze input\");\n      document.getElementById(\"fileUpload\").value = \"\";\n    };\n    this.runSinlgeTask = async () => {\n      console.log(\"> Uruchamiam SINGLE TASK\");\n    };\n    this.runMultiTask = async () => {\n      console.log(\"> Uruchamiam MULTI TASK\");\n      let algosIDs = [];\n      let checkboxes = document.querySelectorAll('input[name=\"algo-many\"]:checked');\n      if (checkboxes === null) {\n        checkboxes.forEach(checkbox => {\n          algosIDs.push(checkbox.value);\n        });\n        console.log(\"Wybrane algosy: \", algosIDs);\n      } else {\n        console.log(\"Nie wybrano algorytmów\");\n      }\n      let funcID = document.querySelector('input[name=\"func-one\"]:checked').value;\n      if (funcID) {\n        console.log(\"Wybrana funckja: \", funcID);\n      } else {\n        console.log(\"Nie wybrano funkcji\");\n      }\n    };\n    makeAutoObservable(this);\n  }\n}","map":{"version":3,"names":["makeAutoObservable","axios","AppStore","constructor","apiPath","algorithms","functions","file","setAlgorithms","data","setFunctions","handleFileChange","event","console","log","target","files","length","selectedFile","handleUpload","formData","FormData","append","response","post","alert","error","document","getElementById","value","runSinlgeTask","runMultiTask","algosIDs","checkboxes","querySelectorAll","forEach","checkbox","push","funcID","querySelector"],"sources":["C:/Users/gesie/astudia_repos/heuristic-algo-app/HeuristicAlgoApp-Frontend/system-frontend/src/AppStore.js"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\nimport axios from \"axios\";\r\n\r\nexport default class AppStore {\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    //apiPath = 'https://jsonplaceholder.typicode.com/';\r\n    apiPath = 'https://localhost:7071/api';\r\n\r\n    algorithms = [];\r\n    functions = [];\r\n    file = \"\";\r\n\r\n    setAlgorithms = (data) => {\r\n        this.algorithms = data;\r\n    }\r\n\r\n    setFunctions = (data) => {\r\n        this.functions = data;\r\n    }\r\n\r\n    handleFileChange = (event) => {\r\n\r\n        console.log(\"> Zmieniam plik\");\r\n\r\n        if (event.target.files && event.target.files.length > 0) {\r\n            const selectedFile = event.target.files[0];\r\n            this.file = selectedFile;\r\n        }\r\n\r\n        console.log(this.file);\r\n    };\r\n\r\n    handleUpload = async (event) => {\r\n\r\n        if (this.file) {\r\n            console.log(\"> Uploaduje plik\");\r\n            const formData = new FormData();\r\n            formData.append('file', this.file);\r\n            try {\r\n                const response = await axios.post(this.apiPath + '/Upload/Add', formData);\r\n                console.log('Plik przesłany pomyślnie', response);\r\n                alert(\"Plik wysłany\")\r\n            } catch (error) {\r\n                console.error('Błąd podczas przesyłania pliku', error);\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"Brak pliku do przesłania\")\r\n        }\r\n\r\n        this.file = \"\"\r\n        console.log(\"Czyszcze input\")\r\n        document.getElementById(\"fileUpload\").value = \"\"\r\n    }\r\n\r\n    runSinlgeTask = async () => {\r\n\r\n        console.log(\"> Uruchamiam SINGLE TASK\")\r\n\r\n    }\r\n\r\n    runMultiTask = async () => {\r\n\r\n        console.log(\"> Uruchamiam MULTI TASK\")\r\n\r\n        let algosIDs = []\r\n        let checkboxes = document.querySelectorAll('input[name=\"algo-many\"]:checked')\r\n        if (checkboxes === null) {\r\n            checkboxes.forEach((checkbox) => {\r\n                algosIDs.push(checkbox.value)\r\n            })\r\n            console.log(\"Wybrane algosy: \", algosIDs)\r\n        }\r\n        else{\r\n            console.log(\"Nie wybrano algorytmów\")\r\n        }\r\n        \r\n        let funcID = document.querySelector('input[name=\"func-one\"]:checked').value\r\n        \r\n        if(funcID){\r\n            console.log(\"Wybrana funckja: \", funcID)\r\n        }\r\n        else{\r\n            console.log(\"Nie wybrano funkcji\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}